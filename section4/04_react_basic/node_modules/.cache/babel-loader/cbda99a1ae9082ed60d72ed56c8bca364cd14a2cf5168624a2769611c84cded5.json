{"ast":null,"code":"var _jsxFileName = \"/Users/onotakashi/Desktop/MacProDesktop/Desktop/Udemy/Udemy_kanzen_nyuumon/section4/04_react_basic/src/087_practice_expr/end/Example.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst title = 'Expression';\nconst array = ['item1', 'item2', 'item3'];\nconst fn = arg => {\n  return `${arg} Function`;\n};\nconst upperCaseText = 'upperCaseText';\nconst Example = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hello JSX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: upperCaseText.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: 'Hello ' + title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: array\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: fn('Hello')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["title","array","fn","arg","upperCaseText","Example","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/onotakashi/Desktop/MacProDesktop/Desktop/Udemy/Udemy_kanzen_nyuumon/section4/04_react_basic/src/087_practice_expr/end/Example.js"],"sourcesContent":["const title = 'Expression';\nconst array = ['item1', 'item2', 'item3'];\nconst fn = (arg) => {\n  return `${arg} Function`;\n};\nconst upperCaseText = 'upperCaseText';\n\nconst Example = () => {\n  return (\n    <>\n      <h3>Hello JSX</h3>\n      {/* toUpperCaseメソッドで文字列をすべて大文字にします。 */}\n      <h3>{upperCaseText.toUpperCase()}</h3>\n      {/* +演算子で文字列を結合します。 */}\n      <h3>{'Hello ' + title}</h3>\n      {/* 配列がJSX内で渡されると自動的に要素が展開されて表示されます。 */}\n      <h3>{array}</h3>\n      {/* 関数の実行はreturnに続く値が返ってきます。 */}\n      <h3>{fn('Hello')}</h3>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;;AAAA,MAAMA,KAAK,GAAG,YAAY;AAC1B,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;AACzC,MAAMC,EAAE,GAAIC,GAAG,IAAK;EAClB,OAAQ,GAAEA,GAAI,WAAU;AAC1B,CAAC;AACD,MAAMC,aAAa,GAAG,eAAe;AAErC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACEF,OAAA;MAAAE,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAElBN,OAAA;MAAAE,QAAA,EAAKJ,aAAa,CAACS,WAAW;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAEtCN,OAAA;MAAAE,QAAA,EAAK,QAAQ,GAAGR;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAE3BN,OAAA;MAAAE,QAAA,EAAKP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAEhBN,OAAA;MAAAE,QAAA,EAAKN,EAAE,CAAC,OAAO;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA,gBACrB;AAEP,CAAC;AAACE,EAAA,GAdIT,OAAO;AAgBb,eAAeA,OAAO;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}